!function(){"use strict";var e="";const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error"},r=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},n=(e,t,r)=>{t?(e.disabled=t,e.classList.add(r.inactiveButtonClass)):(e.disabled=t,e.classList.remove(r.inactiveButtonClass))},o=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?n(t,!0,r):n(t,!1,r)},a=(e,t,n)=>{t.forEach((t=>{r(e,t,n)}))},s=e=>{document.querySelectorAll(e.formSelector).forEach((t=>{((e,t)=>{const n=Array.from(e.querySelectorAll(t.inputSelector)),a=e.querySelector(t.submitButtonSelector);o(n,a,t),n.forEach((s=>{s.addEventListener("input",(function(){((e,t,n)=>{t.validity.valid?r(e,t,n):((e,t,r,n)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(n.inputErrorClass)})(e,t,t.validationMessage,n)})(e,s,t),o(n,a,t)}))}))})(t,e)}))};function i(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";e.textContent=t?n:r}s(t);var c=e+"d3610e9c6dce3cb370d8.svg",d=e+"d38272e02bb4f1ab1c37.svg",l=e+"40608da7369d39bc1077.svg";const u=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers})}getUserInfo(){return this._request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editUserAvatar(e){let{avatar:t}=e;return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})})}addCard(e){let{name:t,link:r}=e;return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}updateLikes(e,t){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"c126eeac-2056-47be-9b3c-8d9b16bc2f4d","Content-Type":"application/json"}});u.getAppInfo().then((e=>{let[t,r]=e;return t.forEach((e=>{M(e)})),r})).then((e=>{m.src=e.avatar,h.textContent=e.name,v.textContent=e.about})).catch(console.error),document.getElementById("spots-logo").src=c;const m=document.getElementById("profile-avatar");document.getElementById("pencil-icon").src=d,document.getElementById("plus-icon").src=l,s(t);const _=document.querySelector(".profile__edit-btn"),h=document.querySelector(".profile__name"),v=document.querySelector(".profile__description"),f=document.querySelector(".profile__avatar-btn"),p=document.querySelector("#edit-avatar-modal"),b=p.querySelector(".modal__submit-btn"),y=p.querySelector("#profile-avatar-input"),S=document.forms["edit-profile-avatar"],q=document.querySelector("#edit-profile-modal"),g=q.querySelector("#profile-name-input"),E=q.querySelector("#profile-description-input"),L=document.forms["edit-profile"],k=document.querySelector(".profile__add-btn"),C=document.querySelector("#add-card-modal"),U=C.querySelector(".modal__submit-btn"),x=C.querySelector("#add-card-link-input"),I=C.querySelector("#add-card-name-input"),$=document.forms["edit-card"],D=document.querySelector("#card-template"),A=document.querySelector(".cards__list"),B=document.querySelector("#preview-modal"),T=B.querySelector(".modal__caption"),P=B.querySelector(".modal__image"),w=document.querySelector("#delete-modal"),N=document.forms["delete-form"];let O,j;function J(e){const t=e.target;P.src=t.src,P.alt=t.alt,T.textContent=t.alt,R(B)}function H(e){"Escape"===e.key&&z(document.querySelector(".modal_opened"))}function R(e){document.addEventListener("keydown",H),e.classList.add("modal_opened")}function z(e){document.removeEventListener("keydown",H),e.classList.remove("modal_opened")}function M(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=function(e){const t=D.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),o=t.querySelector(".card__like-btn");return e.isLiked&&o.classList.toggle("card__like-btn_liked"),r.textContent=e.name,n.src=e.link,n.alt=e.name,n.addEventListener("click",J),o.addEventListener("click",(t=>function(e,t){const r=e.target.classList.contains("card__like-btn_liked");u.updateLikes(t,r).then((()=>{e.target.classList.toggle("card__like-btn_liked")})).catch(console.error)}(t,e._id))),t.querySelector(".card__delete-btn").addEventListener("click",(()=>function(e,t){O=e,j=t,R(w)}(t,e._id))),t}(e);A[t](r)}_.addEventListener("click",(()=>{g.value=h.textContent,E.value=v.textContent,a(q,[g,E],t),R(q)})),L.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;i(t,!0),u.editUserInfo({name:g.value,about:E.value}).then((e=>{h.textContent=e.name,v.textContent=e.about,z(q)})).catch(console.error).finally((()=>{i(t,!1)}))})),S.addEventListener("submit",(function(e){e.preventDefault();const r=e.submitter;i(r,!0),u.editUserAvatar({avatar:y.value}).then((r=>{m.src=r.avatar,n(b,!0,t),e.target.reset(),z(p)})).catch(console.error).finally((()=>{i(r,!1)}))})),k.addEventListener("click",(()=>{R(C)})),N.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;"Delete"===t.textContent.trim()&&(i(t,!0,"Delete","Deleting..."),u.deleteCard(j).then((()=>{O.remove(),z(w),O=void 0,j=void 0})).catch(console.error).finally((()=>{i(t,!1,"Delete","Deleting...")})))})),f.addEventListener("click",(()=>{y.value="",a(p,[y],t),R(p)})),$.addEventListener("submit",(function(e){e.preventDefault();const r=e.submitter;i(r,!0);const o={link:x.value,name:I.value};u.addCard(o).then((r=>{M(r),n(U,!0,t),e.target.reset(),z(C)})).catch(console.error).finally((()=>{i(r,!1)}))})),document.querySelectorAll(".modal").forEach((e=>{e.addEventListener("mousedown",(t=>{t.target.classList.contains("modal_opened")&&z(e),t.target.classList.contains("modal__close-btn")&&z(e)}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,